[package]
name = "facet-toml"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "TOML serialization and deserialization for Facet types"
keywords = ["toml", "serialization", "deserialization", "reflection", "facet"]
categories = ["encoding", "parsing", "data-structures"]

[features]
deserialize = ["alloc", "dep:toml_edit"]
serialize = ["dep:toml_write"]
std = ["alloc", "facet-core/std", "facet-reflect/std", "num-traits/std", "toml_write?/std"]
alloc = ["facet-core/alloc", "facet-reflect/alloc", "toml_write?/alloc"]
rich-diagnostics = ["dep:ariadne", "std"]
default = ["serialize", "deserialize", "std", "rich-diagnostics"]

[dependencies]
ariadne = { version = "=0.5.1", optional = true }
log = "0.4.27"
num-traits = { version = "0.2.19", default-features = false }
toml_edit = { version = "0.22.24", default-features = false, features = [
    "parse",
], optional = true }
toml_write = { version = "0.1.0", default-features = false, optional = true }
facet-core = { version = "0.18.0", path = "../facet-core", default-features = false }
facet-reflect = { version = "0.18.0", path = "../facet-reflect", default-features = false }
yansi = "1.0.1"

[dev-dependencies]
eyre = "0.6.12"
facet = { path = "../facet" }
facet-testhelpers = { path = "../facet-testhelpers" }
