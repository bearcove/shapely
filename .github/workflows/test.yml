name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:

jobs:
  code-quality:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Run code quality checks
        shell: bash
        run: |
          just code-quality

  test:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Run tests
        shell: bash
        run: |
          just test

  nostd:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Run nostd tests
        shell: bash
        run: |
          just nostd

  doc-tests:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Run doc tests
        shell: bash
        run: |
          just doc-tests

  miri:
    runs-on: depot-ubuntu-24.04-arm-32

    container:
      image: ghcr.io/facet-rs/facet-ci:latest-miri
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Run miri
        shell: bash
        run: |
          export CI=true
          just miri

  msrv:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-hack

      - name: ✨ Check MSRV
        shell: bash
        run: |
          just msrv

  minimal-versions:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Check minimal versions
        shell: bash
        run: |
          # Install nightly for minimal-versions feature
          rustup toolchain install nightly
          # Generate lockfile with minimal versions
          cargo +nightly generate-lockfile -Z minimal-versions
          # Check with stable using minimal versions
          cargo check --workspace --all-features --locked --keep-going

  docs:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Check documentation
        shell: bash
        env:
          RUSTDOCFLAGS: -D warnings
        run: |
          just docs

  lockfile:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Check lockfile is updated
        shell: bash
        run: |
          cargo update --workspace --locked

  clippy:
    runs-on: depot-ubuntu-24.04-arm-16

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    permissions:
      security-events: write # to upload sarif results
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Install SARIF tools
        shell: bash
        run: |
          cargo install clippy-sarif --locked
          cargo install sarif-fmt --locked

      - name: ✨ Run clippy with SARIF output
        shell: bash
        run: |
          cargo clippy --workspace --all-features --all-targets --message-format=json | clippy-sarif | tee clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: clippy-results.sarif
          wait-for-processing: true

      - name: Report status
        shell: bash
        run: |
          cargo clippy --workspace --all-features --all-targets --keep-going -- -D warnings --allow deprecated

  coverage:
    runs-on: depot-ubuntu-24.04-arm-32

    container:
      image: ghcr.io/facet-rs/facet-ci:latest
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: ✨ Gather coverage
        shell: bash
        run: |
          cargo tarpaulin --output-dir coverage --out lcov

      - name: ✨ Publish to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
