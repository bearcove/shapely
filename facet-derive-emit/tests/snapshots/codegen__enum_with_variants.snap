---
source: facet-derive-emit/tests/codegen.rs
expression: "expand(r#\"\n        #[derive(Facet)]\n        #[repr(u8)]\n        enum EnumWithVariants {\n            Variant1,\n            Variant2(i32),\n            Variant3 { field1: i32, field2: String },\n        }\n        \"#)"
---
#[used]
static ENUM_WITH_VARIANTS_SHAPE: &'static ::facet::Shape =
    <EnumWithVariants as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl ::facet::Facet for EnumWithVariants {
    const SHAPE: &'static ::facet::Shape = &const {
        #[repr(C)]
        struct __ShadowEnumWithVariants_Variant2 {
            _discriminant: u8,
            _0: i32,
        }
        #[repr(C)]
        struct __ShadowEnumWithVariants_Variant3 {
            _discriminant: u8,
            field1: i32,
            field2: String,
        }
        ::facet::Shape::builder()
            .id(::facet::ConstTypeId::of::<Self>())
            .layout(::core::alloc::Layout::new::<Self>())
            .vtable(::facet::value_vtable!(Self, |f, _opts| {
                ::core::fmt::Write::write_str(f, "EnumWithVariants")
            }))
            .def(::facet::Def::Enum(
                ::facet::EnumDef::builder()
                    .variants(
                        &const {
                            [
                                ::facet::Variant::builder()
                                    .name("Variant1")
                                    .discriminant(0)
                                    .offset(0)
                                    .fields(::facet::Struct::builder().unit().build())
                                    .build(),
                                {
                                    let fields: &'static [::facet::Field] = &const {
                                        [::facet::Field::builder()
                                            .name("_0")
                                            .shape(|| {
                                                ::facet::shape_of(
                                                    &|s: &__ShadowEnumWithVariants_Variant2| &s._0,
                                                )
                                            })
                                            .offset(::core::mem::offset_of!(
                                                __ShadowEnumWithVariants_Variant2,
                                                _0
                                            ))
                                            .flags(::facet::FieldFlags::EMPTY)
                                            .attributes(&[])
                                            .build()]
                                    };
                                    ::facet::Variant::builder()
                                        .name("Variant2")
                                        .discriminant(1)
                                        .offset(0)
                                        .fields(
                                            ::facet::Struct::builder()
                                                .tuple()
                                                .fields(fields)
                                                .build(),
                                        )
                                        .build()
                                },
                                {
                                    let fields: &'static [::facet::Field] = &const {
                                        [
                                            ::facet::Field::builder()
                                                .name("field1")
                                                .shape(|| {
                                                    ::facet::shape_of(
                                                        &|s: &__ShadowEnumWithVariants_Variant3| {
                                                            &s.field1
                                                        },
                                                    )
                                                })
                                                .offset(::core::mem::offset_of!(
                                                    __ShadowEnumWithVariants_Variant3,
                                                    field1
                                                ))
                                                .flags(::facet::FieldFlags::EMPTY)
                                                .attributes(&[])
                                                .build(),
                                            ::facet::Field::builder()
                                                .name("field2")
                                                .shape(|| {
                                                    ::facet::shape_of(
                                                        &|s: &__ShadowEnumWithVariants_Variant3| {
                                                            &s.field2
                                                        },
                                                    )
                                                })
                                                .offset(::core::mem::offset_of!(
                                                    __ShadowEnumWithVariants_Variant3,
                                                    field2
                                                ))
                                                .flags(::facet::FieldFlags::EMPTY)
                                                .attributes(&[])
                                                .build(),
                                        ]
                                    };
                                    ::facet::Variant::builder()
                                        .name("Variant3")
                                        .discriminant(2)
                                        .offset(0)
                                        .fields(
                                            ::facet::Struct::builder()
                                                .struct_()
                                                .fields(fields)
                                                .build(),
                                        )
                                        .build()
                                },
                            ]
                        },
                    )
                    .repr(::facet::EnumRepr::U8)
                    .build(),
            ))
            .build()
    };
}
