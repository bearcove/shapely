---
source: facet-derive-emit/tests/codegen.rs
expression: "expand(r#\"\n        #[derive(Facet)]\n        #[facet(name = \"MyCoolEnum\", repr = \"u16\")]\n        #[repr(u16)] // Ensure repr matches if specified in facet attribute\n        enum EnumWithAttributes {\n            #[facet(name = \"FirstVariant\", discriminant = 10)]\n            VariantA,\n\n            #[facet(skip)]\n            InternalVariant(i32),\n\n            #[facet(deprecated = \"Use VariantD instead\")]\n            VariantC {\n                #[facet(sensitive)]\n                secret: String\n            },\n\n            VariantD {\n                 #[facet(default = \"forty_two\")]\n                 value: i32\n            },\n        }\n        \"#)"
---
#[used]
static ENUM_WITH_ATTRIBUTES_SHAPE: &'static ::facet::Shape =
    <EnumWithAttributes as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl ::facet::Facet for EnumWithAttributes {
    const SHAPE: &'static ::facet::Shape = &const {
        #[repr(C)]
        struct __ShadowEnumWithAttributes_InternalVariant {
            _discriminant: u16,
            _0: i32,
        }
        #[repr(C)]
        struct __ShadowEnumWithAttributes_VariantC {
            _discriminant: u16,
            secret: String,
        }
        #[repr(C)]
        struct __ShadowEnumWithAttributes_VariantD {
            _discriminant: u16,
            value: i32,
        }
        let __facet_variants: &'static [::facet::Variant] = &const {
            [
                ::facet::Variant::builder()
                    .name("VariantA")
                    .discriminant(0)
                    .fields(::facet::Struct::builder().unit().build())
                    .build(),
                {
                    let fields: &'static [::facet::Field] = &const {
                        [::facet::Field::builder()
                            .name("_0")
                            .shape(|| {
                                ::facet::shape_of(
                                    &|s: &__ShadowEnumWithAttributes_InternalVariant| &s._0,
                                )
                            })
                            .offset(::core::mem::offset_of!(
                                __ShadowEnumWithAttributes_InternalVariant,
                                _0
                            ))
                            .flags(::facet::FieldFlags::EMPTY)
                            .attributes(&[])
                            .build()]
                    };
                    ::facet::Variant::builder()
                        .name("InternalVariant")
                        .discriminant(1)
                        .fields(::facet::Struct::builder().tuple().fields(fields).build())
                        .build()
                },
                {
                    let fields: &'static [::facet::Field] = &const {
                        [::facet::Field::builder()
                            .name("secret")
                            .shape(|| {
                                ::facet::shape_of(&|s: &__ShadowEnumWithAttributes_VariantC| {
                                    &s.secret
                                })
                            })
                            .offset(::core::mem::offset_of!(
                                __ShadowEnumWithAttributes_VariantC,
                                secret
                            ))
                            .flags(::facet::FieldFlags::SENSITIVE)
                            .attributes(&[::facet::FieldAttribute::Sensitive])
                            .build()]
                    };
                    ::facet::Variant::builder()
                        .name("VariantC")
                        .discriminant(2)
                        .fields(::facet::Struct::builder().struct_().fields(fields).build())
                        .build()
                },
                {
                    let fields: &'static [::facet::Field] = &const {
                        [::facet::Field::builder()
                            .name("value")
                            .shape(|| {
                                ::facet::shape_of(&|s: &__ShadowEnumWithAttributes_VariantD| {
                                    &s.value
                                })
                            })
                            .offset(::core::mem::offset_of!(
                                __ShadowEnumWithAttributes_VariantD,
                                value
                            ))
                            .flags(::facet::FieldFlags::EMPTY)
                            .attributes(&[::facet::FieldAttribute::Default(Some("\"forty_two\""))])
                            .build()]
                    };
                    ::facet::Variant::builder()
                        .name("VariantD")
                        .discriminant(3)
                        .fields(::facet::Struct::builder().struct_().fields(fields).build())
                        .build()
                },
            ]
        };
        ::facet::Shape::builder()
            .id(::facet::ConstTypeId::of::<Self>())
            .layout(::core::alloc::Layout::new::<Self>())
            .vtable(::facet::value_vtable!(Self, |f, _opts| {
                ::core::fmt::Write::write_str(f, "EnumWithAttributes")
            }))
            .def(::facet::Def::Enum(
                ::facet::EnumDef::builder()
                    .variants(__facet_variants)
                    .repr(::facet::EnumRepr::U16)
                    .build(),
            ))
            .build()
    };
}
