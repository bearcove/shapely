{{ header("facet-args") }}

The `facet-reflect` crate allows reading from and writing to shapes implementing the `Facet` trait. This crate combines the functionality of the former `facet-peek` and `facet-poke` crates, providing a unified interface for reflection and manipulation of `Facet` types.

## Features

- Read (peek) values from `Facet` types
- Write (poke) values to `Facet` types
- Supports various data structures: scalars, lists, maps, structs, enums, and options
- Efficient and safe manipulation of `Facet` types

## Usage

This crate makes it trivial to write serializers and deserializers. It's used by crates like `facet-json`, `facet-yaml`, `facet-urlencoded`, etc.

For more detailed usage examples, please refer to the crate documentation.

{{ footer() }}
