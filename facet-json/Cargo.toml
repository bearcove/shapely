[package]
name = "facet-json"
version = "0.24.1"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "A JSON deserializer and serializer for the facet ecosystem"
keywords = ["json", "serialization", "deserialization", "reflection", "facet"]
categories = ["encoding", "parser-implementations"]

[features]
std = ["facet-core/std", "alloc"] # Uses libstd and alloc
alloc = [
    "facet-core/alloc",
    "facet-serialize/alloc",
    "facet-deserialize/alloc",
] # Enables alloc support
rich-diagnostics = ["facet-deserialize/rich-diagnostics"]
default = ["std", "rich-diagnostics"]

[dependencies]
facet-core = { version = "0.27.0", path = "../facet-core", default-features = false }
facet-deserialize = { version = "0.24.6", path = "../facet-deserialize", default-features = false }
facet-reflect = { version = "0.27.0", path = "../facet-reflect", default-features = false }
facet-serialize = { version = "0.24.1", path = "../facet-serialize", default-features = false }
log = "0.4.27"

[dev-dependencies]
camino = { version = "1" }
eyre = "0.6.12"
facet = { path = "../facet" }
facet-core = { version = "0.27.0", path = "../facet-core", features = [
    "camino",
    "time",
    "ulid",
    "uuid",
    "jiff02",
    "ordered-float",
] }
facet-testhelpers = { path = "../facet-testhelpers" }
insta = "1.43.1"
time = { version = "0.3.41", features = ["macros"] }
ulid = { version = "1.2.1" }
uuid = { version = "1.16.0" }
jiff = "0.2.13"
ordered-float = "5.0.0"
