[package]
name = "facet"
version = "0.1.18"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "Re-exports the Facet trait and derive macros, along with Shape and all related types"
keywords = ["facet", "introspection", "reflection"]
categories = ["development-tools"]

[dependencies]
facet-core = { path = "../facet-core", version = "0.5.0", default-features = false }
facet-derive = { path = "../facet-derive", version = "0.1.16", optional = true }
facet-reflect = { path = "../facet-reflect", version = "0.6.0", optional = true }

[features]
reflect = ["dep:facet-reflect"]   # Enables reflection via Peek and Poke types
testfeat = []                     # Does nothing, only used for tests
std = ["facet-core/std", "alloc"] # Uses libstd and alloc
alloc = ["facet-core/alloc"]      # Enables alloc support
derive = ["dep:facet-derive"]     # Enables the derive macro
default = ["std", "derive"]

[dev-dependencies]
facet-reflect = { path = "../facet-reflect", version = "0.6.0" }
